#!/usr/bin/env bash

set -o pipefail
set -o nounset

source "$(dirname -- "$(realpath -- "${BASH_SOURCE[0]}")")/.ez-installrc"
source "${EZ_INSTALL_HOME}/common/include.sh"

###################################################### EXTERNAL DEPENDENCIES ###

include "${EZ_INSTALL_HOME}/common/common.sh"
include "${EZ_INSTALL_HOME}/install/common.sh"
include "${EZ_INSTALL_HOME}/man/print.sh"
include "${EZ_INSTALL_HOME}/actions.sh"

################################################## CONSTANT GLOBAL VARIABLES ###

readonly EZ_VERSION="0.3 BETA"
readonly SCRIPT_ARGS="$@"
readonly SCRIPT_ARGS_NUM=$#

############################################################### FLAG OPTIONS ###

function usage() {
  print_page "${EZ_INSTALL_HOME}/man/ez_usage"
}


# TODO: Auto generate exit codes.
function manual () {
  ${EZ_COMMAND_INSTALL} -h
  ${EZ_COMMAND_GEN} -h
  print_page "${EZ_INSTALL_HOME}/man/ez_manual"
}


function handle_args() {
  if [[ -p /dev/stdin ]]; then
    usage
    error "Piped arguments not supported" $BASH_SYS_EX_USAGE
  fi

  if [[ ! -t 0 && ! -p /dev/stdin ]]; then
    usage
    error "Stdin redirection not supported" $BASH_SYS_EX_USAGE
  fi

  if [[ -z "${1+x}" ]]; then
    usage
    error "${BASH_SYS_MSG_USAGE_MISSARG}" $BASH_SYS_EX_USAGE
  fi

  local command="${1}"
  shift 1

  # Transform args to string to quote OPTARG with whitespace.
  # Receiving end needs to use `eval set -- ${@:-}`
  # Ref: https://stackoverflow.com/a/1669493
  local command_args=""
  for i in "$@"; do
    if [[ $i =~ ^--.*= ]]; then
      i="$(sed -e "s/\(--.*=\)\(.*\)/\1'\2'/" <<< "$i")"
    elif [[ $i =~ [[:space:]] ]]; then
      i="'$i'"
    fi
    command_args="${command_args} $i"
  done

  case "${command}" in
    dot)            ${EZ_COMMAND_DOT}     "${command_args}" ;;
    gen)            ${EZ_COMMAND_GEN}     "${command_args}" ;;
    install)        ${EZ_COMMAND_INSTALL} "${command_args}" ;;
    -h|--help)      usage; manual; exit $BASH_EX_OK ;;
    -V|--version)   echo "${SCRIPT_NAME} ${EZ_VERSION}"; exit $BASH_EX_OK ;;
    *)
      usage
      error "Command '${1}' not found" $BASH_EZ_EX_COMMAND_NOTFOUND
  esac
}

############################################################# MAIN EXECUTION ###

function _ctrl_c() {
  echo ""
  log 'error' "$(basename -- "${BASH_SOURCE[1]}").${FUNCNAME[1]}(): Interrupted!" $BASH_EX_TERMCTRLC
}


function _main () {
  # Set up trap
  if "${DEBUG}"; then
    trap _ctrl_c INT TERM
  fi

  script_vars
  handle_args "$@"
  return $?
}


res=0
_main "$@"
res=$?

exit $res
